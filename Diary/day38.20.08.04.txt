mv:
mv命令是move的缩写，可以用来移动文件或者将文件改名（move (rename) files），是Linux系统下常用的命令，经常用来备份文件或者目录。
1．命令格式：
    mv [选项] 源文件或目录 目标文件或目录
2．命令功能：
视mv命令中第二个参数类型的不同（是目标文件还是目标目录），mv命令将文件重命名或将其移至一个新的目录中。当第二个参数类型是文件时，mv命令完成文件重命名，此时，源文件只能有一个（也可以是源目录名），它将所给的源文件或目录重命名为给定的目标文件名。当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。在跨文件系统移动文件时，mv先拷贝，再将原有文件删除，而链至该文件的链接也将丢失。
3．命令参数：
-b ：若需覆盖文件，则覆盖前先行备份。 
-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；
-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！
-u ：若目标文件已经存在，且 source 比较新，才会更新(update)
-t ：--target-directory=DIRECTORY move all SOURCE arguments into DIRECTORY，即指
定mv的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源
文件在后。
||
tar:
这些都是tar的参数，tar.gz是一个压缩包，.tar只是打包而没有压缩.
z:通过gzip支持压缩或解压。j 表示bzip2的方式.
x:解压缩
c:压缩
v:在过程中显示正在处理的文件名
f:f后面必须跟上要处理的文件名
$ tar -zcvf test.zip test
$ tar -zxvf test.zip 
||
获得time.Unix
func GetTime()string(){
t := time.Now().UTC().Unix() //float64
return fmt.Sprint(time.Unix(t,0),UTC())
}
||Go语言获取系统的各种信息：
系统类型：runtime.GOOS
系统架构：runtime.GOARCH
cpu核数：runtime.GOMAXPROCS(0)
电脑名称：os.Hostname()
